In addition to the default Neovim key bindings, the following key bindings
are created by the installed plugins and init.vim:

n  <Space>f    *@<Lua 158: ~/.config/nvim/lua/lspconfig-config.lua:32>
n  <Space>ca   *@<Lua 156: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:751>
n  <Space>rn   *@<Lua 155: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:264>
n  <Space>D    *@<Lua 154: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:84>
n  <Space>wl   *@<Lua 153: ~/.config/nvim/lua/lspconfig-config.lua:25>
n  <Space>wr   *@<Lua 152: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:514>
n  <Space>wa   *@<Lua 151: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:477>
n  K           *@<Lua 147: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:40>
v  ["          *@:<C-U>exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
v  []          *@m':<C-U>exe "normal! gv"|call search('^\s*end\(f\%[unction]\|def\)\>', "bW")<CR>
n  []          *@m':call search('^\s*end\(f\%[unction]\|def\)\>', "bW")<CR>
v  [[          *@m':<C-U>exe "normal! gv"|call search('^\s*\(fu\%[nction]\|def\)\>', "bW")<CR>
n  [[          *@m':call search('^\s*\(fu\%[nction]\|def\)\>', "bW")<CR>
v  ]"          *@:<C-U>exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
v  ][          *@m':<C-U>exe "normal! gv"|call search('^\s*end\(f\%[unction]\|def\)\>', "W")<CR>
n  ][          *@m':call search('^\s*end\(f\%[unction]\|def\)\>', "W")<CR>
v  ]]          *@m':<C-U>exe "normal! gv"|call search('^\s*\(fu\%[nction]\|def\)\>', "W")<CR>
n  ]]          *@m':call search('^\s*\(fu\%[nction]\|def\)\>', "W")<CR>
n  gr          *@<Lua 157: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:390>
n  gi          *@<Lua 133: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:94>
n  gd          *@<Lua 148: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:74>
n  gD          *@<Lua 149: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:64>
n  <C-K>       *@<Lua 134: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/lsp/buf.lua:101>
s  <Tab>       * <Esc>i<Right><C-R>=TriggerSnippet()<CR>
n  <Tab>         :bnext<CR>
n  <Space>q    * <Lua 25: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/diagnostic.lua:1515>
n  <Space>e    * <Lua 12: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/diagnostic.lua:1260>
x  #           * y?\V<C-R>"<CR>
                 Nvim builtin
s  %           * b<BS>%
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 Nvim builtin
s  '           * b<BS>'
x  *           * y/\V<C-R>"<CR>
                 Nvim builtin
n  ,?          * :<C-U>Cheatsheet<CR>
n  ,ca           <Plug>NERDCommenterAltDelims
x  ,cu           <Plug>NERDCommenterUncomment
n  ,cu           <Plug>NERDCommenterUncomment
x  ,cb           <Plug>NERDCommenterAlignBoth
n  ,cb           <Plug>NERDCommenterAlignBoth
x  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cA           <Plug>NERDCommenterAppend
x  ,cy           <Plug>NERDCommenterYank
n  ,cy           <Plug>NERDCommenterYank
x  ,cs           <Plug>NERDCommenterSexy
n  ,cs           <Plug>NERDCommenterSexy
x  ,ci           <Plug>NERDCommenterInvert
n  ,ci           <Plug>NERDCommenterInvert
n  ,c$           <Plug>NERDCommenterToEOL
x  ,cn           <Plug>NERDCommenterNested
n  ,cn           <Plug>NERDCommenterNested
x  ,cm           <Plug>NERDCommenterMinimal
n  ,cm           <Plug>NERDCommenterMinimal
x  ,c<Space>     <Plug>NERDCommenterToggle
n  ,c<Space>     <Plug>NERDCommenterToggle
x  ,cc           <Plug>NERDCommenterComment
n  ,cc           <Plug>NERDCommenterComment
n  ,f/         * <Cmd>Telescope current_buffer_fuzzy_find<CR>
n  ,fc         * <Cmd>Telescope colorscheme<CR>
n  ,fh         * <Cmd>Telescope help_tags<CR>
n  ,fb         * <Cmd>Telescope buffers<CR>
n  ,fg         * <Cmd>Telescope live_grep<CR>
n  ,ff         * <Cmd>Telescope find_files<CR>
n  ,$v           <C-W>v<C-W>l:terminal<CR>:set number<CR>A
n  ,$s           <C-W>s<C-W>j:terminal<CR>:set nonumber<CR>A
n  ,,            :noh<CR>
x  ,l            :Limelight!!<CR>
n  ,l            :Limelight!!<CR>
n  ,k            :ColorToggle<CR>
n  ,j            :set filetype=journal<CR>
n  ,h            :RainbowParentheses!!<CR>
n  ,a            gaip*
x  ,a            gaip*
n  ,r            :so ~/.config/nvim/init.vim<CR>
n  ,q            :NvimTreeFindFileToggle<CR>
n  <p            <Plug>(unimpaired-put-below-leftward)
n  <P            <Plug>(unimpaired-put-above-leftward)
n  <s<Esc>     & <Nop>
n  <s            <Plug>(unimpaired-enable)
n  =p            <Plug>(unimpaired-put-below-reformat)
n  =P            <Plug>(unimpaired-put-above-reformat)
n  =s<Esc>     & <Nop>
n  =s            <Plug>(unimpaired-toggle)
n  >p            <Plug>(unimpaired-put-below-rightward)
n  >P            <Plug>(unimpaired-put-above-rightward)
n  >s<Esc>     & <Nop>
n  >s            <Plug>(unimpaired-disable)
x  S             <Plug>VSurround
s  U           * b<BS>U
n  Y           * y$
                 Nvim builtin
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [xx           <Plug>(unimpaired-xml-encode-line)
x  [x            <Plug>(unimpaired-xml-encode)
n  [x            <Plug>(unimpaired-xml-encode)
n  [uu           <Plug>(unimpaired-url-encode-line)
x  [u            <Plug>(unimpaired-url-encode)
n  [u            <Plug>(unimpaired-url-encode)
n  [CC           <Plug>(unimpaired-string-encode-line)
x  [C            <Plug>(unimpaired-string-encode)
n  [yy           <Plug>(unimpaired-string-encode-line)
x  [y            <Plug>(unimpaired-string-encode)
n  [y            <Plug>(unimpaired-string-encode)
n  [P            <Plug>(unimpaired-put-above)
n  [p            <Plug>(unimpaired-put-above)
n  [o<Esc>     & <Nop>
n  [o            <Plug>(unimpaired-enable)
x  [e            <Plug>(unimpaired-move-selection-up)
n  [e            <Plug>(unimpaired-move-up)
n  [<Space>      <Plug>(unimpaired-blank-up)
o  [n            <Plug>(unimpaired-context-previous)
x  [n            <Plug>(unimpaired-context-previous)
n  [n            <Plug>(unimpaired-context-previous)
n  [f            <Plug>(unimpaired-directory-previous)
n  [<C-T>        <Plug>(unimpaired-ptprevious)
n  [T            <Plug>(unimpaired-tfirst)
n  [t            <Plug>(unimpaired-tprevious)
n  [<C-Q>        <Plug>(unimpaired-cpfile)
n  [Q            <Plug>(unimpaired-cfirst)
n  [q            <Plug>(unimpaired-cprevious)
n  [<C-L>        <Plug>(unimpaired-lpfile)
n  [L            <Plug>(unimpaired-lfirst)
n  [l            <Plug>(unimpaired-lprevious)
n  [B            <Plug>(unimpaired-bfirst)
n  [b            <Plug>(unimpaired-bprevious)
n  [A            <Plug>(unimpaired-first)
n  [a            <Plug>(unimpaired-previous)
n  [C            9999[c
n  [c            <Plug>(signify-prev-hunk)
n  [d          * <Lua 21: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/diagnostic.lua:805>
s  \           * b<BS>\
n  \             ,q
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]xx           <Plug>(unimpaired-xml-decode-line)
x  ]x            <Plug>(unimpaired-xml-decode)
n  ]x            <Plug>(unimpaired-xml-decode)
n  ]uu           <Plug>(unimpaired-url-decode-line)
x  ]u            <Plug>(unimpaired-url-decode)
n  ]u            <Plug>(unimpaired-url-decode)
n  ]CC           <Plug>(unimpaired-string-decode-line)
x  ]C            <Plug>(unimpaired-string-decode)
n  ]yy           <Plug>(unimpaired-string-decode-line)
x  ]y            <Plug>(unimpaired-string-decode)
n  ]y            <Plug>(unimpaired-string-decode)
n  ]P            <Plug>(unimpaired-put-below)
n  ]p            <Plug>(unimpaired-put-below)
n  ]o<Esc>     & <Nop>
n  ]o            <Plug>(unimpaired-disable)
x  ]e            <Plug>(unimpaired-move-selection-down)
n  ]e            <Plug>(unimpaired-move-down)
n  ]<Space>      <Plug>(unimpaired-blank-down)
o  ]n            <Plug>(unimpaired-context-next)
x  ]n            <Plug>(unimpaired-context-next)
n  ]n            <Plug>(unimpaired-context-next)
n  ]f            <Plug>(unimpaired-directory-next)
n  ]<C-T>        <Plug>(unimpaired-ptnext)
n  ]T            <Plug>(unimpaired-tlast)
n  ]t            <Plug>(unimpaired-tnext)
n  ]<C-Q>        <Plug>(unimpaired-cnfile)
n  ]Q            <Plug>(unimpaired-clast)
n  ]q            <Plug>(unimpaired-cnext)
n  ]<C-L>        <Plug>(unimpaired-lnfile)
n  ]L            <Plug>(unimpaired-llast)
n  ]l            <Plug>(unimpaired-lnext)
n  ]B            <Plug>(unimpaired-blast)
n  ]b            <Plug>(unimpaired-bnext)
n  ]A            <Plug>(unimpaired-last)
n  ]a            <Plug>(unimpaired-next)
n  ]C            9999]c
n  ]c            <Plug>(signify-next-hunk)
n  ]d          * <Lua 24: /home/linuxbrew/.linuxbrew/Cellar/neovim/HEAD-556f864/share/nvim/runtime/lua/vim/diagnostic.lua:851>
s  ^           * b<BS>^
s  `           * b<BS>`
x  a%            <Plug>(MatchitVisualTextObject)
n  cr            <Plug>(abolish-coerce-word)
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
n  ds            <Plug>Dsurround
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gS          * :<C-U>call <SNR>83_Mapping(g:splitjoin_split_mapping, "sj#Split")<CR>
n  gJ          * :<C-U>call <SNR>83_Mapping(g:splitjoin_join_mapping, "sj#Join")<CR>
x  gS            <Plug>VgSurround
n  yo<Esc>     & <Nop>
n  yo            <Plug>(unimpaired-toggle)
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
n  y<C-G>      & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
   <Plug>AirlineSelectNextTab * :<C-U>call <SNR>161_jump_to_tab(v:count1)<CR>
   <Plug>AirlineSelectPrevTab * :<C-U>call <SNR>161_jump_to_tab(-v:count1)<CR>
   <Plug>AirlineSelectTab0 * :call <SNR>161_select_tab(9)<CR>
   <Plug>AirlineSelectTab9 * :call <SNR>161_select_tab(8)<CR>
   <Plug>AirlineSelectTab8 * :call <SNR>161_select_tab(7)<CR>
   <Plug>AirlineSelectTab7 * :call <SNR>161_select_tab(6)<CR>
   <Plug>AirlineSelectTab6 * :call <SNR>161_select_tab(5)<CR>
   <Plug>AirlineSelectTab5 * :call <SNR>161_select_tab(4)<CR>
   <Plug>AirlineSelectTab4 * :call <SNR>161_select_tab(3)<CR>
   <Plug>AirlineSelectTab3 * :call <SNR>161_select_tab(2)<CR>
   <Plug>AirlineSelectTab2 * :call <SNR>161_select_tab(1)<CR>
   <Plug>AirlineSelectTab1 * :call <SNR>161_select_tab(0)<CR>
s  <C-X>       * b<BS><C-X>
s  <Left>      * <Esc>bi
s  <Right>     * <Esc>a
s  <S-Tab>     * <Esc>i<Right><C-R>=BackwardsSnippet()<CR>
x  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<CR>
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
x  <Plug>(Limelight) * :Limelight<CR>
n  <Plug>(Limelight) * :set opfunc=limelight#operator<CR>g@
n  <M-F8>      * :call NextColor(0)<CR>
n  <S-F8>      * :call NextColor(-1)<CR>
n  <F8>        * :call NextColor(1)<CR>
o  <Plug>(fzf-maps-o) * <C-C>:<C-U>call fzf#vim#maps('o', 0)<CR>
x  <Plug>(fzf-maps-x) * :<C-U>call fzf#vim#maps('x', 0)<CR>
n  <Plug>(fzf-maps-n) * :<C-U>call fzf#vim#maps('n', 0)<CR>
n  <Plug>(fzf-normal) * <Nop>
n  <Plug>(fzf-insert) * i
n  <Plug>(ctrlp) * :<C-U>CtrlP<CR>
   <C-P>         <Plug>(ctrlp)
n  <Plug>SplitjoinJoin * :<C-U>call sj#Join()<CR>
n  <Plug>SplitjoinSplit * :<C-U>call sj#Split()<CR>
n  <Plug>(unimpaired-xml-decode-line) * <SNR>82_TransformSetup("xml_decode")."_"
x  <Plug>(unimpaired-xml-decode) * <SNR>82_TransformSetup("xml_decode")
n  <Plug>(unimpaired-xml-decode) * <SNR>82_TransformSetup("xml_decode")
n  <Plug>unimpaired_line_xml_decode * <SNR>82_TransformSetup("xml_decode")."_"
x  <Plug>unimpaired_xml_decode * <SNR>82_TransformSetup("xml_decode")
n  <Plug>unimpaired_xml_decode * <SNR>82_TransformSetup("xml_decode")
n  <Plug>(unimpaired-xml-encode-line) * <SNR>82_TransformSetup("xml_encode")."_"
x  <Plug>(unimpaired-xml-encode) * <SNR>82_TransformSetup("xml_encode")
n  <Plug>(unimpaired-xml-encode) * <SNR>82_TransformSetup("xml_encode")
n  <Plug>unimpaired_line_xml_encode * <SNR>82_TransformSetup("xml_encode")."_"
x  <Plug>unimpaired_xml_encode * <SNR>82_TransformSetup("xml_encode")
n  <Plug>unimpaired_xml_encode * <SNR>82_TransformSetup("xml_encode")
n  <Plug>(unimpaired-url-decode-line) * <SNR>82_TransformSetup("url_decode")."_"
x  <Plug>(unimpaired-url-decode) * <SNR>82_TransformSetup("url_decode")
n  <Plug>(unimpaired-url-decode) * <SNR>82_TransformSetup("url_decode")
n  <Plug>unimpaired_line_url_decode * <SNR>82_TransformSetup("url_decode")."_"
x  <Plug>unimpaired_url_decode * <SNR>82_TransformSetup("url_decode")
n  <Plug>unimpaired_url_decode * <SNR>82_TransformSetup("url_decode")
n  <Plug>(unimpaired-url-encode-line) * <SNR>82_TransformSetup("url_encode")."_"
x  <Plug>(unimpaired-url-encode) * <SNR>82_TransformSetup("url_encode")
n  <Plug>(unimpaired-url-encode) * <SNR>82_TransformSetup("url_encode")
n  <Plug>unimpaired_line_url_encode * <SNR>82_TransformSetup("url_encode")."_"
x  <Plug>unimpaired_url_encode * <SNR>82_TransformSetup("url_encode")
n  <Plug>unimpaired_url_encode * <SNR>82_TransformSetup("url_encode")
n  <Plug>(unimpaired-string-decode-line) * <SNR>82_TransformSetup("string_decode")."_"
x  <Plug>(unimpaired-string-decode) * <SNR>82_TransformSetup("string_decode")
n  <Plug>(unimpaired-string-decode) * <SNR>82_TransformSetup("string_decode")
n  <Plug>unimpaired_line_string_decode * <SNR>82_TransformSetup("string_decode")."_"
x  <Plug>unimpaired_string_decode * <SNR>82_TransformSetup("string_decode")
n  <Plug>unimpaired_string_decode * <SNR>82_TransformSetup("string_decode")
n  <Plug>(unimpaired-string-encode-line) * <SNR>82_TransformSetup("string_encode")."_"
x  <Plug>(unimpaired-string-encode) * <SNR>82_TransformSetup("string_encode")
n  <Plug>(unimpaired-string-encode) * <SNR>82_TransformSetup("string_encode")
n  <Plug>unimpaired_line_string_encode * <SNR>82_TransformSetup("string_encode")."_"
x  <Plug>unimpaired_string_encode * <SNR>82_TransformSetup("string_encode")
n  <Plug>unimpaired_string_encode * <SNR>82_TransformSetup("string_encode")
n  <Plug>unimpairedPutBelow * :call <SNR>82_putline(']p', 'below')<CR>
n  <Plug>unimpairedPutAbove * :call <SNR>82_putline('[p', 'above')<CR>
n  <Plug>(unimpaired-put-below-reformat) * :<C-U>call <SNR>82_putline(v:count1 . ']p', 'Below')<CR>=']
n  <Plug>(unimpaired-put-above-reformat) * :<C-U>call <SNR>82_putline(v:count1 . '[p', 'Above')<CR>=']
n  <Plug>(unimpaired-put-below-leftward) * :<C-U>call <SNR>82_putline(v:count1 . ']p', 'Below')<CR><']
n  <Plug>(unimpaired-put-above-leftward) * :<C-U>call <SNR>82_putline(v:count1 . '[p', 'Above')<CR><']
n  <Plug>(unimpaired-put-below-rightward) * :<C-U>call <SNR>82_putline(v:count1 . ']p', 'Below')<CR>>']
n  <Plug>(unimpaired-put-above-rightward) * :<C-U>call <SNR>82_putline(v:count1 . '[p', 'Above')<CR>>']
n  <Plug>(unimpaired-put-below) * :call <SNR>82_putline(']p', 'below')<CR>
n  <Plug>(unimpaired-put-above) * :call <SNR>82_putline('[p', 'above')<CR>
n  <Plug>(unimpaired-toggle)p & :<C-U>call <SNR>82_SetupPaste()<CR>0C
n  <Plug>(unimpaired-disable)p & :<C-U>call <SNR>82_SetupPaste()<CR>o
n  <Plug>(unimpaired-enable)p & :<C-U>call <SNR>82_SetupPaste()<CR>O
n  <Plug>(unimpaired-paste) & :<C-U>call <SNR>82_SetupPaste()<CR>
n  <Plug>unimpairedPaste * :call <SNR>82_SetupPaste()<CR>
n  <Plug>(unimpaired-toggle)t & :<C-U>set colorcolumn=<C-R>=<SNR>82_ColorColumn(!empty(&cc))<CR><CR>
n  <Plug>(unimpaired-disable)t & :<C-U>set colorcolumn=<C-R>=<SNR>82_ColorColumn(1)<CR><CR>
n  <Plug>(unimpaired-enable)t & :<C-U>set colorcolumn=<C-R>=<SNR>82_ColorColumn(0)<CR><CR>
n  <Plug>(unimpaired-toggle)+ & :<C-U>set <C-R>=<SNR>82_CursorOptions()<CR><CR>
n  <Plug>(unimpaired-disable)+ & :<C-U>set nocursorline nocursorcolumn<CR>
n  <Plug>(unimpaired-enable)+ & :<C-U>set cursorline cursorcolumn<CR>
n  <Plug>(unimpaired-toggle)x & :<C-U>set <C-R>=<SNR>82_CursorOptions()<CR><CR>
n  <Plug>(unimpaired-disable)x & :<C-U>set nocursorline nocursorcolumn<CR>
n  <Plug>(unimpaired-enable)x & :<C-U>set cursorline cursorcolumn<CR>
n  <Plug>(unimpaired-toggle)v & :<C-U>set <C-R>=(&virtualedit =~# "all") ? "virtualedit-=all" : "virtualedit+=all"<CR><CR>
n  <Plug>(unimpaired-disable)v & :<C-U>set virtualedit-=all<CR>
n  <Plug>(unimpaired-enable)v & :<C-U>set virtualedit+=all<CR>
n  <Plug>(unimpaired-toggle)z & :<C-U>setlocal <C-R>=<SNR>82_Toggle("spell")<CR><CR>
n  <Plug>(unimpaired-disable)z & :<C-U>setlocal nospell<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)z & :<C-U>setlocal spell<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)w & :<C-U>setlocal <C-R>=<SNR>82_Toggle("wrap")<CR><CR>
n  <Plug>(unimpaired-disable)w & :<C-U>setlocal nowrap<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)w & :<C-U>setlocal wrap<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)s & :<C-U>setlocal <C-R>=<SNR>82_Toggle("spell")<CR><CR>
n  <Plug>(unimpaired-disable)s & :<C-U>setlocal nospell<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)s & :<C-U>setlocal spell<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)r & :<C-U>setlocal <C-R>=<SNR>82_Toggle("relativenumber")<CR><CR>
n  <Plug>(unimpaired-disable)r & :<C-U>setlocal norelativenumber<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)r & :<C-U>setlocal relativenumber<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)n & :<C-U>setlocal <C-R>=<SNR>82_Toggle("number")<CR><CR>
n  <Plug>(unimpaired-disable)n & :<C-U>setlocal nonumber<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)n & :<C-U>setlocal number<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)l & :<C-U>setlocal <C-R>=<SNR>82_Toggle("list")<CR><CR>
n  <Plug>(unimpaired-disable)l & :<C-U>setlocal nolist<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)l & :<C-U>setlocal list<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)i & :<C-U>set <C-R>=<SNR>82_Toggle("ignorecase")<CR><CR>
n  <Plug>(unimpaired-disable)i & :<C-U>set noignorecase<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)i & :<C-U>set ignorecase<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)h & :<C-U>set <C-R>=<SNR>82_Toggle("hlsearch")<CR><CR>
n  <Plug>(unimpaired-disable)h & :<C-U>set nohlsearch<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)h & :<C-U>set hlsearch<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)d & :<C-U><C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>
n  <Plug>(unimpaired-disable)d & :<C-U>diffoff<CR>
n  <Plug>(unimpaired-enable)d & :<C-U>diffthis<CR>
n  <Plug>(unimpaired-toggle)| & :<C-U>setlocal <C-R>=<SNR>82_Toggle("cursorcolumn")<CR><CR>
n  <Plug>(unimpaired-disable)| & :<C-U>setlocal nocursorcolumn<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)| & :<C-U>setlocal cursorcolumn<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)u & :<C-U>setlocal <C-R>=<SNR>82_Toggle("cursorcolumn")<CR><CR>
n  <Plug>(unimpaired-disable)u & :<C-U>setlocal nocursorcolumn<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)u & :<C-U>setlocal cursorcolumn<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)_ & :<C-U>setlocal <C-R>=<SNR>82_Toggle("cursorline")<CR><CR>
n  <Plug>(unimpaired-disable)_ & :<C-U>setlocal nocursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)_ & :<C-U>setlocal cursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)- & :<C-U>setlocal <C-R>=<SNR>82_Toggle("cursorline")<CR><CR>
n  <Plug>(unimpaired-disable)- & :<C-U>setlocal nocursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)- & :<C-U>setlocal cursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)c & :<C-U>setlocal <C-R>=<SNR>82_Toggle("cursorline")<CR><CR>
n  <Plug>(unimpaired-disable)c & :<C-U>setlocal nocursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-enable)c & :<C-U>setlocal cursorline<C-R>=<SNR>82_StatuslineRefresh()<CR><CR>
n  <Plug>(unimpaired-toggle)b & :<C-U>set background=<C-R>=&background == "dark" ? "light" : "dark"<CR><CR>
n  <Plug>(unimpaired-disable)b & :<C-U>set background=dark<CR>
n  <Plug>(unimpaired-enable)b & :<C-U>set background=light<CR>
   <Plug>unimpairedMoveSelectionDown * :<C-U>call <SNR>82_MoveSelectionDown(v:count1)<CR>
   <Plug>unimpairedMoveSelectionUp * :<C-U>call <SNR>82_MoveSelectionUp(v:count1)<CR>
n  <Plug>unimpairedMoveDown * :<C-U>call <SNR>82_Move('+',v:count1,'down')<CR>
n  <Plug>unimpairedMoveUp * :<C-U>call <SNR>82_Move('--',v:count1,'up')<CR>
   <Plug>(unimpaired-move-selection-down) * :<C-U>call <SNR>82_MoveSelectionDown(v:count1)<CR>
   <Plug>(unimpaired-move-selection-up) * :<C-U>call <SNR>82_MoveSelectionUp(v:count1)<CR>
n  <Plug>(unimpaired-move-down) * :<C-U>call <SNR>82_Move('+',v:count1,'down')<CR>
n  <Plug>(unimpaired-move-up) * :<C-U>call <SNR>82_Move('--',v:count1,'up')<CR>
n  <Plug>unimpairedBlankDown * :<C-U>exe <SNR>82_BlankDown()<CR>
n  <Plug>unimpairedBlankUp * :<C-U>exe <SNR>82_BlankUp()<CR>
n  <Plug>(unimpaired-blank-down) * :<C-U>exe <SNR>82_BlankDown()<CR>
n  <Plug>(unimpaired-blank-up) * :<C-U>exe <SNR>82_BlankUp()<CR>
o  <Plug>unimpairedContextNext * :<C-U>call <SNR>82_ContextMotion(0)<CR>
o  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>82_ContextMotion(1)<CR>
x  <Plug>unimpairedContextNext * :<C-U>exe 'normal! gv'|call <SNR>82_Context(0)<CR>
x  <Plug>unimpairedContextPrevious * :<C-U>exe 'normal! gv'|call <SNR>82_Context(1)<CR>
n  <Plug>unimpairedContextNext * :<C-U>call <SNR>82_Context(0)<CR>
n  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>82_Context(1)<CR>
o  <Plug>(unimpaired-context-next) * :<C-U>call <SNR>82_ContextMotion(0)<CR>
o  <Plug>(unimpaired-context-previous) * :<C-U>call <SNR>82_ContextMotion(1)<CR>
v  <Plug>(unimpaired-context-next) * :<C-U>exe 'normal! gv'|call <SNR>82_Context(0)<CR>
v  <Plug>(unimpaired-context-previous) * :<C-U>exe 'normal! gv'|call <SNR>82_Context(1)<CR>
n  <Plug>(unimpaired-context-next) * :<C-U>call <SNR>82_Context(0)<CR>
n  <Plug>(unimpaired-context-previous) * :<C-U>call <SNR>82_Context(1)<CR>
n  <Plug>unimpairedDirectoryPrevious * :<C-U>execute <SNR>82_PreviousFileEntry(v:count1)<CR>
n  <Plug>unimpairedDirectoryNext * :<C-U>execute <SNR>82_NextFileEntry(v:count1)<CR>
n  <Plug>(unimpaired-directory-previous) * :<C-U>execute <SNR>82_PreviousFileEntry(v:count1)<CR>
n  <Plug>(unimpaired-directory-next) * :<C-U>execute <SNR>82_NextFileEntry(v:count1)<CR>
n  <Plug>unimpairedTPNext * :<C-U>exe "p".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>unimpairedTPPrevious * :<C-U>exe "p".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>(unimpaired-ptnext) * :<C-U>exe v:count1 . "ptnext"<CR>
n  <Plug>(unimpaired-ptprevious) * :<C-U>exe v:count1 . "ptprevious"<CR>
n  <Plug>unimpairedTLast * :<C-U>exe "".(v:count ? v:count : "")."tlast"<CR>
n  <Plug>unimpairedTFirst * :<C-U>exe "".(v:count ? v:count : "")."tfirst"<CR>
n  <Plug>unimpairedTNext * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>unimpairedTPrevious * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>(unimpaired-tlast) * :<C-U><C-R>=v:count ? v:count . "trewind" : "tlast"<CR><CR>
n  <Plug>(unimpaired-tfirst) * :<C-U><C-R>=v:count ? v:count . "trewind" : "tfirst"<CR><CR>
n  <Plug>(unimpaired-tnext) * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>(unimpaired-tprevious) * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>unimpairedQNFile * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv
n  <Plug>unimpairedQPFile * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv
n  <Plug>(unimpaired-cnfile) * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv
n  <Plug>(unimpaired-cpfile) * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv
n  <Plug>unimpairedQLast * :<C-U>exe "".(v:count ? v:count : "")."clast"<CR>zv
n  <Plug>unimpairedQFirst * :<C-U>exe "".(v:count ? v:count : "")."cfirst"<CR>zv
n  <Plug>unimpairedQNext * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv
n  <Plug>unimpairedQPrevious * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv
n  <Plug>(unimpaired-clast) * :<C-U><C-R>=v:count ? v:count . "cc" : "clast"<CR><CR>zv
n  <Plug>(unimpaired-cfirst) * :<C-U><C-R>=v:count ? v:count . "cc" : "cfirst"<CR><CR>zv
n  <Plug>(unimpaired-cnext) * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv
n  <Plug>(unimpaired-cprevious) * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv
n  <Plug>unimpairedLNFile * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv
n  <Plug>unimpairedLPFile * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv
n  <Plug>(unimpaired-lnfile) * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv
n  <Plug>(unimpaired-lpfile) * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv
n  <Plug>unimpairedLLast * :<C-U>exe "".(v:count ? v:count : "")."llast"<CR>zv
n  <Plug>unimpairedLFirst * :<C-U>exe "".(v:count ? v:count : "")."lfirst"<CR>zv
n  <Plug>unimpairedLNext * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv
n  <Plug>unimpairedLPrevious * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv
n  <Plug>(unimpaired-llast) * :<C-U><C-R>=v:count ? v:count . "ll" : "llast"<CR><CR>zv
n  <Plug>(unimpaired-lfirst) * :<C-U><C-R>=v:count ? v:count . "ll" : "lfirst"<CR><CR>zv
n  <Plug>(unimpaired-lnext) * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv
n  <Plug>(unimpaired-lprevious) * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv
n  <Plug>unimpairedBLast * :<C-U>exe "".(v:count ? v:count : "")."blast"<CR>
n  <Plug>unimpairedBFirst * :<C-U>exe "".(v:count ? v:count : "")."bfirst"<CR>
n  <Plug>unimpairedBNext * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>
n  <Plug>unimpairedBPrevious * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>
n  <Plug>(unimpaired-blast) * :<C-U><C-R>=v:count ? v:count . "buffer" : "blast"<CR><CR>
n  <Plug>(unimpaired-bfirst) * :<C-U><C-R>=v:count ? v:count . "buffer" : "bfirst"<CR><CR>
n  <Plug>(unimpaired-bnext) * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>
n  <Plug>(unimpaired-bprevious) * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>
n  <Plug>unimpairedALast * :<C-U>exe "".(v:count ? v:count : "")."last"<CR>
n  <Plug>unimpairedAFirst * :<C-U>exe "".(v:count ? v:count : "")."first"<CR>
n  <Plug>unimpairedANext * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>
n  <Plug>unimpairedAPrevious * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>
n  <Plug>(unimpaired-last) * :<C-U><C-R>=v:count ? v:count . "argument" : "last"<CR><CR>
n  <Plug>(unimpaired-first) * :<C-U><C-R>=v:count ? v:count . "argument" : "first"<CR><CR>
n  <Plug>(unimpaired-next) * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>
n  <Plug>(unimpaired-previous) * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>
x  <M-i>       * <Lua 87: ~/.local/share/nvim/plugged/vim-illuminate/lua/illuminate.lua:279>
o  <M-i>       * <Lua 86: ~/.local/share/nvim/plugged/vim-illuminate/lua/illuminate.lua:279>
n  <M-p>       * <Lua 85: ~/.local/share/nvim/plugged/vim-illuminate/lua/illuminate.lua:272>
                 Move to previous reference
n  <M-n>       * <Lua 56: ~/.local/share/nvim/plugged/vim-illuminate/lua/illuminate.lua:265>
                 Move to next reference
n  <M-w>         :silent VCoolIns ra<CR>
n  <M-v>         :silent VCoolIns h<CR>
n  <M-r>         :VCoolIns r<CR>
n  <M-c>         :VCoolor<CR>
n  <Plug>NERDCommenterAltDelims * :call nerdcommenter#SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call nerdcommenter#Comment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call nerdcommenter#Comment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call nerdcommenter#Comment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call nerdcommenter#Comment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call nerdcommenter#Comment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call nerdcommenter#Comment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call nerdcommenter#Comment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call nerdcommenter#Comment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call nerdcommenter#Comment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call nerdcommenter#Comment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call nerdcommenter#Comment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call nerdcommenter#Comment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call nerdcommenter#Comment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call nerdcommenter#Comment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call nerdcommenter#Comment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call nerdcommenter#Comment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call nerdcommenter#Comment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call nerdcommenter#Comment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call nerdcommenter#Comment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call nerdcommenter#Comment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call nerdcommenter#Comment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call nerdcommenter#Comment("n", "Comment")<CR>
n  <Plug>(EasyAlignOperator) * :set opfunc=<SNR>65_easy_align_op<CR>g@
v  <Plug>(EasyAlignRepeat) * :<C-U>call <SNR>65_repeat_in_visual()<CR>
n  <Plug>(EasyAlignRepeat) * :call <SNR>65_easy_align_repeat()<CR>
v  <Plug>(LiveEasyAlign) * :<C-U>call <SNR>65_live_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(LiveEasyAlign) * :set opfunc=<SNR>65_live_easy_align_op<CR>g@
v  <Plug>(EasyAlign) * :<C-U>call <SNR>65_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(EasyAlign) * :set opfunc=<SNR>65_easy_align_op<CR>g@
o  <Plug>(coc-classobj-a) * :<C-U>call CocAction('selectSymbolRange', v:false, '', ['Interface', 'Struct', 'Class'])<CR>
o  <Plug>(coc-classobj-i) * :<C-U>call CocAction('selectSymbolRange', v:true, '', ['Interface', 'Struct', 'Class'])<CR>
v  <Plug>(coc-classobj-a) * :<C-U>call CocAction('selectSymbolRange', v:false, visualmode(), ['Interface', 'Struct', 'Class'])<CR>
v  <Plug>(coc-classobj-i) * :<C-U>call CocAction('selectSymbolRange', v:true, visualmode(), ['Interface', 'Struct', 'Class'])<CR>
o  <Plug>(coc-funcobj-a) * :<C-U>call CocAction('selectSymbolRange', v:false, '', ['Method', 'Function'])<CR>
o  <Plug>(coc-funcobj-i) * :<C-U>call CocAction('selectSymbolRange', v:true, '', ['Method', 'Function'])<CR>
v  <Plug>(coc-funcobj-a) * :<C-U>call CocAction('selectSymbolRange', v:false, visualmode(), ['Method', 'Function'])<CR>
v  <Plug>(coc-funcobj-i) * :<C-U>call CocAction('selectSymbolRange', v:true, visualmode(), ['Method', 'Function'])<CR>
n  <Plug>(coc-cursors-position) * :<C-U>call CocAction('cursorsSelect', bufnr('%'), 'position', 'n')<CR>
n  <Plug>(coc-cursors-word) * :<C-U>call CocAction('cursorsSelect', bufnr('%'), 'word', 'n')<CR>
v  <Plug>(coc-cursors-range) * :<C-U>call CocAction('cursorsSelect', bufnr('%'), 'range', visualmode())<CR>
n  <Plug>(coc-cursors-operator) * :<C-U>set operatorfunc=<SNR>60_CursorRangeFromSelected<CR>g@
n  <Plug>(coc-refactor) * :<C-U>call       CocActionAsync('refactor')<CR>
n  <Plug>(coc-command-repeat) * :<C-U>call       CocAction('repeatCommand')<CR>
n  <Plug>(coc-float-jump) * :<C-U>call       coc#float#jump()<CR>
n  <Plug>(coc-float-hide) * :<C-U>call       coc#float#close_all()<CR>
n  <Plug>(coc-fix-current) * :<C-U>call       CocActionAsync('doQuickfix')<CR>
n  <Plug>(coc-openlink) * :<C-U>call       CocActionAsync('openLink')<CR>
n  <Plug>(coc-references-used) * :<C-U>call       CocActionAsync('jumpUsed')<CR>
n  <Plug>(coc-references) * :<C-U>call       CocActionAsync('jumpReferences')<CR>
n  <Plug>(coc-type-definition) * :<C-U>call       CocActionAsync('jumpTypeDefinition')<CR>
n  <Plug>(coc-implementation) * :<C-U>call       CocActionAsync('jumpImplementation')<CR>
n  <Plug>(coc-declaration) * :<C-U>call       CocActionAsync('jumpDeclaration')<CR>
n  <Plug>(coc-definition) * :<C-U>call       CocActionAsync('jumpDefinition')<CR>
n  <Plug>(coc-diagnostic-prev-error) * :<C-U>call       CocActionAsync('diagnosticPrevious', 'error')<CR>
n  <Plug>(coc-diagnostic-next-error) * :<C-U>call       CocActionAsync('diagnosticNext',     'error')<CR>
n  <Plug>(coc-diagnostic-prev) * :<C-U>call       CocActionAsync('diagnosticPrevious')<CR>
n  <Plug>(coc-diagnostic-next) * :<C-U>call       CocActionAsync('diagnosticNext')<CR>
n  <Plug>(coc-diagnostic-info) * :<C-U>call       CocActionAsync('diagnosticInfo')<CR>
n  <Plug>(coc-format) * :<C-U>call       CocActionAsync('format')<CR>
n  <Plug>(coc-format-selected) * :<C-U>set        operatorfunc=<SNR>60_FormatFromSelected<CR>g@
n  <Plug>(coc-rename) * :<C-U>call       CocActionAsync('rename')<CR>
n  <Plug>(coc-codeaction-source) * :<C-U>call       CocActionAsync('codeAction', '', ['source'], v:true)<CR>
n  <Plug>(coc-codeaction-refactor) * :<C-U>call       CocActionAsync('codeAction', 'cursor', ['refactor'], v:true)<CR>
n  <Plug>(coc-codeaction-cursor) * :<C-U>call       CocActionAsync('codeAction', 'cursor')<CR>
n  <Plug>(coc-codeaction-line) * :<C-U>call       CocActionAsync('codeAction', 'currline')<CR>
n  <Plug>(coc-codeaction) * :<C-U>call       CocActionAsync('codeAction', '')<CR>
n  <Plug>(coc-codeaction-refactor-selected) * :<C-U>set        operatorfunc=<SNR>60_CodeActionRefactorFromSelected<CR>g@
n  <Plug>(coc-codeaction-selected) * :<C-U>set        operatorfunc=<SNR>60_CodeActionFromSelected<CR>g@
v  <Plug>(coc-codeaction-refactor-selected) * :<C-U>call       CocActionAsync('codeAction', visualmode(), ['refactor'], v:true)<CR>
v  <Plug>(coc-codeaction-selected) * :<C-U>call       CocActionAsync('codeAction', visualmode())<CR>
v  <Plug>(coc-format-selected) * :<C-U>call       CocActionAsync('formatSelected', visualmode())<CR>
n  <Plug>(coc-codelens-action) * :<C-U>call       CocActionAsync('codeLensAction')<CR>
n  <Plug>(coc-range-select) * :<C-U>call       CocActionAsync('rangeSelect',     '', v:true)<CR>
v  <Plug>(coc-range-select-backward) * :<C-U>call       CocActionAsync('rangeSelect',     visualmode(), v:false)<CR>
v  <Plug>(coc-range-select) * :<C-U>call       CocActionAsync('rangeSelect',     visualmode(), v:true)<CR>
n  <Plug>(abolish-coerce-word) * <SNR>57_coerce(nr2char(getchar())).'iw'
v  <Plug>(abolish-coerce) * <SNR>57_coerce(nr2char(getchar()))
n  <Plug>(abolish-coerce) * <SNR>57_coerce(nr2char(getchar()))
x  <Plug>(signify-motion-outer-visual) * :<C-U>call sy#util#hunk_text_object(1)<CR>
o  <Plug>(signify-motion-outer-pending) * :<C-U>call sy#util#hunk_text_object(1)<CR>
x  <Plug>(signify-motion-inner-visual) * :<C-U>call sy#util#hunk_text_object(0)<CR>
o  <Plug>(signify-motion-inner-pending) * :<C-U>call sy#util#hunk_text_object(0)<CR>
n  <Plug>(signify-prev-hunk) * &diff ? '[c' : ":\<C-U>call sy#jump#prev_hunk(v:count1)\<CR>"
n  <Plug>(signify-next-hunk) * &diff ? ']c' : ":\<C-U>call sy#jump#next_hunk(v:count1)\<CR>"
v  <Plug>VgSurround * :<C-U>call <SNR>54_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>54_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * <SNR>54_opfunc2('setup')
n  <Plug>Ysurround * <SNR>54_opfunc('setup')
n  <Plug>YSsurround * <SNR>54_opfunc2('setup').'_'
n  <Plug>Yssurround * '^'.v:count1.<SNR>54_opfunc('setup').'g_'
n  <Plug>CSurround * :<C-U>call <SNR>54_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>54_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>54_dosurround(<SNR>54_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
n  <Plug>fugitive: & <Nop>
n  <Plug>fugitive:y<C-G> & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_directory(vim.fn.expand("%:p"))<CR>
x  <Plug>(vsnip-cut-text) * :<C-U>call <SNR>38_vsnip_visual_text(visualmode())<CR>gv"_c
s  <Plug>(vsnip-cut-text) * <C-G>:<C-U>call <SNR>38_vsnip_visual_text(visualmode())<CR>gv"_c
n  <Plug>(vsnip-cut-text) * :set operatorfunc=<SNR>38_vsnip_cut_text_normal<CR>g@
x  <Plug>(vsnip-select-text) * :<C-U>call <SNR>38_vsnip_visual_text(visualmode())<CR>gv
s  <Plug>(vsnip-select-text) * <C-G>:<C-U>call <SNR>38_vsnip_visual_text(visualmode())<CR>gv<C-G>
n  <Plug>(vsnip-select-text) * :set operatorfunc=<SNR>38_vsnip_select_text_normal<CR>g@
s  <Plug>(vsnip-jump-prev) * <Esc>:<C-U>call <SNR>38_jump(-1)<CR>
s  <Plug>(vsnip-jump-next) * <Esc>:<C-U>call <SNR>38_jump(1)<CR>
s  <Plug>(vsnip-expand) * <C-G><Esc>:<C-U>call <SNR>38_expand()<CR>
s  <Plug>(vsnip-expand-or-jump) * <Esc>:<C-U>call <SNR>38_expand_or_jump()<CR>
s  <BS>        * b<BS>
n  <S-Tab>       :bprevious<CR>
   <F12>         :set invlist<CR>
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 Nvim builtin
