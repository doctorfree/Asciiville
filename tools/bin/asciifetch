#!/bin/bash

# Prepare ----------------------------------------------------------------------

have_gum=$(type -p gum)
[ "${have_gum}" ] || exit 1

usage() {
    printf "\nUsage: asciifetch [-a] [-z] [-u]"
	printf "\nWhere:"
	printf "\n\t-a indicates animate display"
	printf "\n\t-z indicates zoom display"
	printf "\n\t-u displays this usage message and exits\n"
	exit 1
}

animate() {
    LINES=$(tput lines)
    quarter=$((LINES / 4))
    interval="0.1"
    line=0
    while [ ${line} -lt ${quarter} ]
    do
        sleep ${interval}
        printf "\n"
        line=$((line+1))
    done

    line=0
    tput cup 0 0
    while [ ${line} -lt ${quarter} ]
    do
        sleep ${interval}
        tput ri
        line=$((line+1))
    done

    line=0
    tput cup ${LINES} 0
    while [ ${line} -lt ${quarter} ]
    do
        sleep ${interval}
        printf "\n"
        line=$((line+1))
    done

    line=0
    tput cup 0 0
    while [ ${line} -lt ${quarter} ]
    do
        sleep ${interval}
        tput ri
        line=$((line+1))
    done

    sleep 2
    tput cup ${LINES} 0
}

#zoom() {
#}

animate=
zoom=
while getopts "azu" flag; do
    case $flag in
        a)
            animate=1
            ;;
        z)
            zoom=1
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

title=$(gum style --bold --foreground 12 "$(figlet Asciiville)")
subtitle=$(gum style --italic --foreground 12 'The Ultimate in Ascii Art')
info=$(gum join --vertical --align center "${title}" "${subtitle}")

art=$(gum style --foreground "${main_color}" '          ,~-.
         (  Ê» )-.          ,~Ê»`-.
      ,~Ê» `  Ê» ) )       _(   _) )
     ( ( [97m.--.===.--.[0m    (  `    Ê» )
      `[97m.%%.[91m###[97m|[0m888[97m.[31m:[97m`.[0m   `-Ê»`~~=~Ê»
      [97m/%%/[91m####[97m|[0m8888[97m\[31m::[97m\[0m
     [97m|%%/[91m#####[97m|[0m88888[97m\[31m::[97m|[0m
     [97m|%%|[91m#####[97m|[0m88888[97m|[31m::[97m|[0m.,-.
     [97m\%%|[91m#####[97m|[0m88888[97m|[31m::[97m/[0m    )_
      [97m\%\[91m#####[97m|[0m88888[97m/[31m:[97m/[0m ( `Ê»  )
       [97m\%\[91m####[97m|[0m8888[97m/[31m:[97m/[0m(  ,  -Ê»`-.
   ,~-. [97m`%\[91m###[97m|[0m888[97m/[31m:[97mÊ»[0m(  (     Ê») )
  (  ) )_ [97m`\[93m__[97m|[93m__[97m/Ê»[0m   `~-~=--~~=Ê»
 ( ` Ê»)  ) [93m[VVVVV][0m
(_(_.~~~Ê»   [97m\|[93m_[97m|/[0m
            [93m[XXX][0m
            [93m`"""Ê»[0m')

color=$(gum style '[0;30mï”›   [0;31mï”›   [0;32mï”›   [0;33mï”›   [0;34mï”›   [0;35mï”›   [0;36mï”›   [0;37mï”› [0m
[0;90mïƒ‚   [0;91mïƒ‚   [0;92mïƒ‚   [0;93mïƒ‚   [0;94mïƒ‚   [0;95mïƒ‚   [0;96mïƒ‚   [0;97mïƒ‚ [0m')


# Display ------------------------------------------------------------------------------------------

terminal_size=$(stty size)
terminal_height=${terminal_size% *}
terminal_width=${terminal_size#* }

prompt_height=${PROMPT_HEIGHT#-1}

print_test() {
    no_color=$(printf '%b' "${1}" | sed -e 's/\x1B\[[0-9;]*[JKmsu]//g')

    [ "$(printf '%s' "${no_color}" | wc --lines)" -gt $(( terminal_height - prompt_height )) ] && return 1
    [ "$(printf '%s' "${no_color}" | wc --max-line-length)" -gt "${terminal_width}" ] && return 1

    gum style --align center --width="${terminal_width}" "${1}" ''
    printf '%b' "\033[A"

    [ "${animate}" ] && animate
    exit 0
}


# Landscape layout
group_info_color=$(gum join --vertical --align center "${info}" '' "${color}")
print_test "$(gum join --horizontal --align center "${art}" '  ' "${group_info_color}")"

# Portrait layout
print_test "$(gum join --vertical --align center "${art}" '' "${group_info_color}")"

# Other layout
print_test "${group_info_color}"
print_test "${info}"

exit 1
