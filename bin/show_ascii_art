#!/bin/bash
#
ART_DIR="/usr/share/doc/asciiville/art"
FIG_WELCOME="Welcome To"
FIG_ASCII="Asciiville"
FIG_FONTS="/usr/share/figlet-fonts"
LARGE_FONT="Speed"
SMALL_FONT="Calvin S"
art="yinyang"

usage() {
  printf "\nUsage: show_ascii_art [-u] [-a art] [-A art_dir] [-d font_dir]"
  printf "\n\t[-D seconds] [-i image] [-L] [-l large_font] [-o] [-r]"
  printf "\n\t[-s small_font] [-S] [-t first_text] [-T second_text]"
  printf "\n\t[-h height] [-w width]"
  printf "\nWhere:"
  printf "\n\t-u displays this usage message and exits"
  printf "\n\t-a 'art' specifies which ascii art to display"
  printf "\n\t-A 'art_dir' specifies the path to the ascii art folder"
  printf "\n\t-d 'font_dir' specifies the path to the figlet fonts"
  printf "\n\t-D 'seconds' specifies the delay, in seconds, between screens"
  printf "\n\t-i 'image' specifies an image file to convert to ascii art"
  printf "\n\t-L lists the ascii art in the 'art_dir' and exits"
  printf "\n\t-l 'large_font' specifies the figlet font to use for large text"
  printf "\n\t-o indicates overwrite any existing ascii art when saving"
  printf "\n\t-r indicates select random fonts"
  printf "\n\t-s 'small_font' specifies the figlet font to use for small text"
  printf "\n\t-S indicates save converted image ascii art in art_dir"
  printf "\n\t-t 'first_text' specifies the first text to display"
  printf "\n\t-T 'second_text' specifies the second text to display"
  printf "\n\t-h 'height' specifies the height of the converted ascii art"
  printf "\n\t-w 'width' specifies the width of the converted ascii art\n\n"
  exit 1
}

list=
delay=5
input_image=
randfont=
overwrite=
save_art=
height=20
width=60
have_convert=`type -p convert`
have_jp2a=`type -p jp2a`
while getopts "a:A:D:d:h:i:Ll:rs:St:T:w:u" flag; do
  case $flag in
      a)
          art="${OPTARG}"
          ;;
      A)
          ART_DIR="${OPTARG}"
          ;;
      d)
          FIG_FONTS="${OPTARG}"
          ;;
      D)
          delay="${OPTARG}"
          ;;
      i)
          if [ "${have_jp2a}" ]
          then
            input_image="${OPTARG}"
          else
            echo "The jp2a command not installed or not in PATH"
            echo "Skipping conversion and using default ascii art"
          fi
          ;;
      L)
          list=1
          ;;
      l)
          LARGE_FONT="${OPTARG}"
          ;;
      o)
          overwrite=1
          ;;
      r)
          randfont=1
          ;;
      s)
          SMALL_FONT="${OPTARG}"
          ;;
      S)
          save_art=1
          ;;
      t)
          FIG_WELCOME="${OPTARG}"
          ;;
      T)
          FIG_ASCII="${OPTARG}"
          ;;
      h)
          height="${OPTARG}"
          ;;
      w)
          width="${OPTARG}"
          ;;
      u)
          usage
          ;;
  esac
done

[ "${list}" ] && {
  first=1
  for art in ${ART_DIR}/*.txt
  do
      [ "${art}" == "${ART_DIR}/*.txt" ] && {
          echo "No ascii art found in ${ART_DIR}"
          echo "Ascii art files must have a '.txt' suffix"
          exit 0
      }
      [ "${first}" ] && echo "Ascii Art in ${ART_DIR} :"
      bart=`basename "${art}"`
      name=`echo ${bart} | sed -e "s/.txt//"`
      printf "\n\t${name}"
      first=
  done
  printf "\n\n"
  exit 0
}

[ "${randfont}" ] && {
  # Arrays with font names
  largefonts=("3d" "ANSI Shadow" "Bolger" "sblood" "Slant" "Shadow" "Speed" "Varsity")
  smallfonts=("small" "Calvin S" "miniwi")

  # Seed random generator
  RANDOM=$$$(date +%s)

  LARGE_FONT=${largefonts[ $RANDOM % ${#largefonts[@]} ]}
  [ -r "${FIG_FONTS}/${LARGE_FONT}.flf" ] || LARGE_FONT="Standard"
  SMALL_FONT=${smallfonts[ $RANDOM % ${#smallfonts[@]} ]}
  [ -r "${FIG_FONTS}/${SMALL_FONT}.flf" ] || SMALL_FONT="Standard"
}

clear
figlet -c -d "${FIG_FONTS}" -f "${SMALL_FONT}" -k -t ${FIG_WELCOME}
figlet -c -d "${FIG_FONTS}" -f "${SMALL_FONT}" -k -t ${FIG_ASCII}

sleep ${delay}
if [ "${input_image}" ]
then
  image_name=`basename "${input_image}"`
  suf=`echo ${image_name} | awk -F '.' ' { print $NF } '`
  image_name=`echo $image_name} | sed -e "s/.${suf}//"`
  [ "${suf}" == "jpg" ] || \
  [ "${suf}" == "jpeg" ] || \
  [ "${suf}" == "JPG" ] ||
  [ "${suf}" == "JPEG" ] || {
      if [ "${have_convert}" ]
      then
          convert "${input_image}" /tmp/${image_name}$$.jpg
      else
          echo "The 'convert' command is not installed or not in PATH"
          echo "Cannot convert ${input_image} to ascii art"
          exit 1
      fi
  }
  [ -f /tmp/${image_name}$$.jpg ] || {
      cp "${input_image}" /tmp/${image_name}$$.jpg
  }
  jp2a --border --colors --size=${width}x${height} \
       --output=/tmp/"${image_name}"$$.txt "/tmp/${image_name}$$.jpg"
  /bin/cat "/tmp/${image_name}$$.txt" | while read l
  do
      printf "\n\t$l"
  done
  printf "\n"
else
  /bin/cat ${ART_DIR}/${art}.txt | while read l
  do
      printf "\n\t$l"
  done
  printf "\n"
fi

sleep ${delay}
have_lolcat=`type -p lolcat`
if [ "${have_lolcat}" ]
then
  figlet -c -d "${FIG_FONTS}" -f "${LARGE_FONT}" -k -t ${FIG_WELCOME} | lolcat
  figlet -c -d "${FIG_FONTS}" -f "${LARGE_FONT}" -k -t ${FIG_ASCII} | lolcat
else
  figlet -c -d "${FIG_FONTS}" -f "${LARGE_FONT}" -k -t ${FIG_WELCOME}
  figlet -c -d "${FIG_FONTS}" -f "${LARGE_FONT}" -k -t ${FIG_ASCII}
fi

sleep ${delay}
if [ "${have_lolcat}" ]
then
  if [ "${input_image}" ]
  then
    /bin/cat "/tmp/${image_name}$$.txt" | while read l
    do
      printf "\n\t$l"
    done | lolcat
  else
    /bin/cat ${ART_DIR}/${art}.txt | while read l
    do
      printf "\n\t$l"
    done | lolcat
  fi
else
  if [ "${input_image}" ]
  then
    /bin/cat "/tmp/${image_name}$$.txt" | while read l
    do
      printf "\n\t$l"
    done
  else
    /bin/cat ${ART_DIR}/${art}.txt | while read l
    do
      printf "\n\t$l"
    done
  fi
fi
printf "\n"

[ -f "/tmp/${image_name}$$.txt" ] && {
  if [ "${save_art}" ]
  then
    if [ -f "${ART_DIR}/${image_name}.txt" ]
    then
      if [ "${overwrite}" ]
      then
        sudo cp "/tmp/${image_name}$$.txt" "${ART_DIR}/${image_name}.txt"
      else
        echo "${ART_DIR}/${image_name}.txt already exists"
        echo "Not saving ${image_name}.txt"
      fi
    else
      sudo cp "/tmp/${image_name}$$.txt" "${ART_DIR}/${image_name}.txt"
    fi
  fi
  rm -f "/tmp/${image_name}$$.txt"
}
