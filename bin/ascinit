#!/bin/bash
#
# ascinit - initialize Asciiville configuration files
#
# Setup default tmux configuration for this user
# Install required pip modules if not already installed
CONFDIR=/usr/share/doc/asciiville
BOLD=$(tput bold)
NORMAL=$(tput sgr0)

# Mutt configuration user setup
[ -f ${CONFDIR}/mutt/muttrc ] && {
  [ -d ${HOME}/.mutt ] || {
    mkdir ${HOME}/.mutt
    chmod 750 ${HOME}/.mutt
  }
  [ -d ${HOME}/.mutt/cache ] || {
    mkdir ${HOME}/.mutt/cache
    chmod 750 ${HOME}/.mutt/cache
  }
  [ -d ${HOME}/.mutt/cache/headers ] || {
    mkdir ${HOME}/.mutt/cache/headers
    chmod 750 ${HOME}/.mutt/cache/headers
  }
  [ -d ${HOME}/.mutt/cache/bodies ] || {
    mkdir ${HOME}/.mutt/cache/bodies
    chmod 750 ${HOME}/.mutt/cache/bodies
  }
  [ -f ${HOME}/.mutt/certificates ] || {
    touch ${HOME}/.mutt/certificates
    chmod 640 ${HOME}/.mutt/certificates
  }
  [ -f ${HOME}/.mutt/muttrc ] || {
    cp ${CONFDIR}/mutt/muttrc ${HOME}/.mutt/muttrc
    chmod 600 ${HOME}/.mutt/muttrc
    echo "A basic ${HOME}/.mutt/muttrc Mutt email client configuration"
    echo "has been created for you. The default configuration can be used"
    echo "as a template to create a GMail IMAP Mutt email account."
    echo "Edit ${HOME}/.mutt/muttrc and add your GMail credentials."
    echo ""
    echo "Several more extensive Mutt configurations are included in Asciiville."
    echo "See the folders:"
    printf "\t${CONFDIR}/mutt/\nand\n\t${CONFDIR}/mutt_multiple/\n"
    echo ""
    echo "A good starting point for the new Mutt user is the Mutt Wiki at:"
    echo "https://gitlab.com/muttmua/mutt/-/wikis/home"
  }
  [ -f ${HOME}/.mutt/colors ] || {
    cp ${CONFDIR}/mutt/colors ${HOME}/.mutt/colors
    chmod 640 ${HOME}/.mutt/colors
  }
}

# Setup default rifle configuration for this user unless one exists
[ -f ${CONFDIR}/rifle.conf ] && {
  [ -f ${HOME}/.config/ranger/rifle.conf ] || {
    [ -d ${HOME}/.config ] || mkdir -p ${HOME}/.config
    [ -d ${HOME}/.config/ranger ] || mkdir -p ${HOME}/.config/ranger
    cp ${CONFDIR}/rifle.conf ${HOME}/.config/ranger/rifle.conf
  }
}

# Setup default rainbowstream configuration for this user unless one exists
[ -f ${CONFDIR}/rainbow_config.json ] && {
  [ -f ${HOME}/.rainbow_config.json ] || {
    cp ${CONFDIR}/rainbow_config.json ${HOME}/.rainbow_config.json
  }
}

# Setup default tmux configuration for this user unless
# terminal-overrides has already been set
[ -f ${CONFDIR}/tmux.conf ] && {
  if [ -f ${HOME}/.tmux.conf ]
  then
    grep terminal-overrides ${HOME}/.tmux.conf > /dev/null || {
      cat ${CONFDIR}/tmux.conf >> ${HOME}/.tmux.conf
    }
  else
    cat ${CONFDIR}/tmux.conf >> ${HOME}/.tmux.conf
  fi
}

have_pip=`type -p pip`
[ "${have_pip}" ] || {
  plat=`uname -s`
  if [ "$plat" == "Darwin" ]
  then
    python3 -m ensurepip --upgrade
  else
    debian=
    [ -f /etc/os-release ] && . /etc/os-release
    [ "${ID_LIKE}" == "debian" ] && debian=1
    [ "${debian}" ] || [ -f /etc/debian_version ] && debian=1

    if [ "${debian}" ]
    then
      sudo apt install python3-pip
    else
      sudo yum install python3-pip
    fi
  fi
}

pip list | grep asciimatics > /dev/null || python3 -m pip install asciimatics
pip list | grep rainbowstream > /dev/null || python3 -m pip install rainbowstream

printf "\n${BOLD}Asciiville Initialization Complete${NORMAL}\n"
printf "\nAuthorize the Rainbow Stream app at Twitter"
printf "\nby running the ${BOLD}'rainbowstream'${NORMAL} command\n"
printf "\nVisit the Asciiville Wiki at:"
printf "\n\t${BOLD}https://github.com/doctorfree/Asciiville/wiki${NORMAL}\n"

[ "$1" == "-n" ] || {
  type -p asciisplash > /dev/null && {
    while true
    do
      read -p "View an ASCII animation ? (y/n) " yn
      case $yn in
        [Yy]* )
              asciisplash -c 1 -a -i
              break
              ;;
        [Nn]* )
              printf "\nExiting.\n"
              exit 0
              ;;
            * ) echo "Please answer yes or no."
              ;;
      esac
    done
  }
}
